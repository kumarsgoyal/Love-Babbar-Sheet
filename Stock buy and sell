class Solution{
    //Function to find the days of buying and selling stock for max profit.
    ArrayList<ArrayList<Integer> > stockBuySell(int A[], int n) {
        ArrayList<ArrayList<Integer>> result = new ArrayList<> ();
        boolean flag = true;
        
        for(int i = 1; i < n; i++) {
            if(A[i] > A[i - 1]) {
                if(result.isEmpty() == false && result.get(result.size() - 1).get(1) == (i - 1)) {
                    result.get(result.size() - 1).set(1, i);
                }
                else {
                    ArrayList<Integer> temp = new ArrayList<> ();
                    temp.add(i - 1);
                    temp.add(i);
                    result.add(temp);
                }
            }
        }
        
        return result;
    }
}


/*
class Solution{
    //Function to find the days of buying and selling stock for max profit.
    ArrayList<ArrayList<Integer> > stockBuySell(int A[], int n) {
        ArrayList<ArrayList<Integer>> result = new ArrayList<> ();
        boolean flag = true;
        
        for(int i = 1; i < n; i++) {
            if(A[i] > A[i - 1]) {
                ArrayList<Integer> temp = new ArrayList<> ();
                temp.add(i - 1);
                temp.add(i);
                result.add(temp);
            }
        }
        
        return result;
    }
}

*/
